#proxy.conf

#in /etc/nginx/conf.d


#server_tokens off;

#server {
#  listen      80;
#  server_name notebooks.countryfairycampground.com;
#  rewrite     ^   https://$server_name$request_uri? permanent;
#}

#top-level http config for websocket headers
# from https://github.com/jupyterhub/jupyterhub/blob/master/docs/source/referen$
map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
}

# All regular http requests on port 80 become SSL/HTTPS requests on port 32
server {
    listen 80;
    server_name notebooks.countryfairycampground.com;

    # Tell all requests to port 80 to be 302 redirected to HTTPS
    return 302 https://$host$request_uri;
}


server {
  listen 443;
  #listen 443 ssl default_server;


  ssl on;
  #listen [::]:80 default_server ipv6only=on;

  #root /var/www/html;
  #index index.php index.html index.htm;

  server_name notebooks.countryfairycampground.com;

  ## SSL Protocals
  ssl_certificate /usr/local/etc/letsencrypt/live/notebooks.countryfairycampgro$
  ssl_certificate_key /usr/local/etc/letsencrypt/live/notebooks.countryfairycam$

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/ssl/certs/dhparam.pen;

  # Make site accessible from http://localhost/
  #server_name localhost;

  # certs sent to the client in SERVER HELLO are concatenated in
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_stapling on;
  ssl_stapling_verify on;
  #ssl_session_tickets off;

  # modern configuration. tweak to your needs.
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-$


  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;

  location / {
    proxy_pass http://127.0.0.1:8000;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;

    #proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location ~ /.well-known {
    allow all;
  }
}



